python03
  

Python_day01回顾
命令：
   cp / cp -r 复制文件/文件夹
   mv         移动文件/文件夹（改名字）
   mkdir 创建文件夹
   rmdir 删除文件夹
   touch 创建文件/更新文件的修改时间
   chmod 修改文件权限
          （读/写/执行）
 sudo 获取root用户权限，用root权限来执行命令

df 查看磁盘使用情况
top 任务管理器

Python的执行

1、Python3 xxx.py
2、交互模式 ctrl + d 退出
 数据类型
 int    整数型
 complex 复数
 float 浮点数
 bool 布尔型 true flase
 
 %字符串的格式化

1、新内容
        vscode  (visua studio code / Microsoft)
        缩放 ctrl+ + / -
        注释 ctrl + /
        保存 ctrl + s
        启动 vscode 的命令
        $  code <回车>
        $  code 文件名<回车>
        $  code 文件夹名<回车>


变量 
        变量是关联一个对象的标识符
        变量可以绑定一个对象，并可以通过变量名使用这个对象
        标识符的命名方法：
        以字母或下划线开头，后跟字母下划线或数字
        说明：标识符区分大小写
    
   示列：
        a A A1 bbb set_age_ _abcd _abcde a1b2  _ 

        不合法的标识符：
        1a 123 $ABC 
        pythond的关键字不能用做变量名
         True Flase None is del if ....
         
         赋值语句 statements
         符号 =
         语法：
            变量名 = 表达式
            或
            变量名1 = 变量名2 = 表达式
            或
            变量名1，变量名2，....= 序列
            作用：
            创建一个变量并绑定数据对象
            改变一个变量的绑定的数据对象
            例子：
            a = 10
            b = 20
            c = a+b #c 绑定 30
            
            赋值语句说明：
            1.当变量不存在时，赋值语句会创建该变量，同时将变量绑定在赋值运算符右侧的对象上
            2.当变量存在时，改变此变量的绑定关系
            3.一个变量只能绑定一个对象
            4.多个变量可以同时绑定在一个对象上
    del语句
     作用：用于删除变量，同时解除与对象的关联关系， 如果可能则释放对象
     语法： del 变量名1，变量名2，...
       在交互模式下查看当前作用域下有那些变量
       help("__main__") 只能在交互模式下使用
       示例：
         a = 100
         b = 200
         x , y = 123 , 456
         del a 
         del b , x , y 同时删除3个变量
          
          自动化内存管理和引用计数：
          每个对象都会记录有几个变量引用（绑定）自身，当引用的数量为0时，则此对象被销毁，此种自动化
          内存管理的方式叫做“引用计数”
            
          is和 is not 运算符
           作用： 
            判断俩个对象是否是同一个对象，当是同一个对象时
            返回True,否则返回False
            is not 与 is 的返回值 相反
            语法：
            x is y
            x is not y
          id 函数
          作用： 
          返回一个对象在内存中的地址
          说明： 
            is运算符是根据id来进行判断的
            格式：
            id（对象）
         小整数对象池：
         CPython中，整数-5至 256 永远存在于小整数对象池中不会释放
         并可重复使用

         复合赋值算术运算符
          运算符     说明
      y += x        等同于 y = y + x 





      比较运算符
        <    
        <=
        >
        >=
        == 
       ！=   不等于
       语法：
         左表达式 < 右表达式
         说明： 
            比较运算符返回布尔类型的值
            示例：
              100 < 200
              1 + 5 == 2 + 4
            数值对象的构造函数（创建）函数
            float（obj）  用字符串或数字转换为浮点数，如果不给出参数，返回0.0
            int（x，base=10）  或 int（x=0） 用数字或字符串转换为整数，如果不给出参数，返回0
                     |
                     |
                    进制
             complex(r=0.0,i=0.0) 用数字创建一个复数（实部为r 虚部为i）
            bool(x)  用x创建一个布尔值（true/false）
            函数的调用语法：
             函数名（传参列表）
             说明：
               函数调用是一个表达式，一定会返回一个对象的引用关系（或者返回None）
            
           bool(x) 返回假值的情况
             值        说明
          None        空值
          false       布尔假值
          0 0.0 0j    数字0
--------------------------------
        ‘ ’           字符串
        【】           空列表
        （）           空元组
         {}            空字典
  

      预置（内建） 数值型函数
       abs（×） 取x的绝对值
       round（number[, ndigit]）  对数值进行”四舍五入“
       ndigit是小数向右取整的位数，负数表示向左取整
       pow（x,y,z=None） 相当于 x**y 或 x**y%z
       示例：
          abs(-100)  #100
           round(1234.56789) #1235
           round(1234.56789, 2) #1234.57
           round(1234.56789, 4) #1234.5479
           round(1234.56789, -2) #1200.0
           pow（5,2) #25
           pow（5,2 % 10) # 5

      help() 函数查看函数的帮助
      >>>help(函数名) # 查看相应函数的帮助
        

        语句 ：statements
         语句由一些表达式组成，通常一台语句可以独立的执行来完成一部分事情并形成结果
         多条语句写在一行内要用（;） 分开 
         示例:
           code/statements.py 
           显示换行：
            当语句太长时，用 反斜杠 \ 换行
            隐式折行
                所有的括号的内容换行， 加括号 适用的括号有（）[] {}
              
                示例
                 x = (1+1+1+1+1
                 +1+1+1)
        
        
   基本输入输出函数
       基本输入函数 input
        作用：
            从一个标准输入设置上读取一个字符串（不包括换行符）
            格式：
                input("提示字符串")
                  说明： 
                  返回用户输入的字符串
                  "提示字符串"可以为空

                基本输出函数 print
                格式：
                print（value,...,sep=" ",end="\n",file=sys.stdout,fiush=False）
                  

                将一系列的值以字符串形式输出到标准输出设备上（默认终端）
                参数选项：

                 sep=" " 默认代表一个空格
                   print(1, 2, 3, 4, sep="") # 无空格
                   end="\n" 默认 换行
                   print（1， 2， 3， 4，end=""）
                   print（1， 2， 3， 4）# 不换行
                  print（1,2,3,4，end=”\n\n\n“） 
                   print(aaaaaaaaaaaaa) #运行结果 1 2 3 4
                                                  

                                                aaaaaaaaaaaaa 换了三行
                   file：流对象（默认）

      

                   

      
















                           

